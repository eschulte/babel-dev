#+TITLE: Org-babel
#+OPTIONS: ^:nil
#+STARTUP: oddeven hideblocks

* Paper
** Abstract
** Introduction -- problem
*** requirement -- computational communities need computational communication
In this paper we present Org-babel -- a tool for *computational
communication*.  To begin we must define some terms which we will use
in this paper
- code (or source code) :: will refer to the textual communication
     with a computer.  Namely the textual source of computer programs
     which can be can be run or executed.
- prose :: will refer to textual communication between people in human
     languages (e.g. English).
- computational communication :: will refer to the communication in
     which the subject is computational objects or results.  This
     communication is unique in that it must consist of mutually
     supportive sections of both prose and code.  Computational
     communication can take place between different people, people and
     computers, or even the same person at different points in time.

Computational communication takes place in a variety of settings

- *Scientific research* increasingly involves the use of computational
  tools the exposition of which is vital to successfully understanding
  of the meaning of the research results.  This is true for both
  researchers in the computational sciences and researchers who make
  use of computational or statistical tools or models in their work.
- In *open source software development* individual developers must
  communicate their ideas and their code for successful collaboration.
- Without proper *documentation* the utility of computational tools is
  severely compromised [fn:1].
- *Working notes* related to the use of computational tools are an
  important resource for developers/researchers, and increasingly the
  sharing of these notes through the internet in the form of blogs and
  forums can play an important role in the adoption of computational
  languages and tools [fn:2].

All of the communities mentioned above have a need to share both code
and prose.  Prose alone is insufficient as it is
#+begin_quote [[gentleman-lang]]
not conducive to succinct, exact expression and the audience is
separated from the actions and details of the algorithm and often
forced to make assumptions about the precise computational details
#+end_quote
while code is designed for interpretation by compilers and computers
and is not a sufficient medium for communication between people.

Portions of the need for /computational communication/ have been
identified and addressed under a variety of names such as Literate
Programming [fn:3] which adds prose to the authoring of code, or
Reproducible Research [fn:4] which add executable code to prose
publications.  Org-babel generalizes these preceding approaches and
provides a unified environment supporting all manner of both authoring
and using prose and code.

|       | prose                          | code              |
|-------+--------------------------------+-------------------|
| write | org-mode authoring environment | Emacs major modes |
| use   | publish to variety of formats  | execute / tangle  |

As such Org-babel provides a consistent environment in which the
entire life cycle of a research or development project can take place.
With the data, code and text of a project stored in a single location
which can be exported to a variety of formats the future
reproducibility of the work is ensured, and the burden on the author
of sharing the work is greatly reduced.

The name "Org-babel" is a pair of literary references indicating both
the nature of the problem in the "Tower of Babel"
#+begin_quote Genesis-11
The LORD said, “If as one people speaking the same language they have
begun to do this, then nothing they plan to do will be impossible for
them.  Come, let us go down and confuse their language so they will
not understand each other.”
#+end_quote
and the solution in the "Babel Fish".
#+begin_quote The-Hitchhiker's-Guide-to-the-Galaxy
The Babel Fish is small, yellow, and simultaneously translates from
one spoken language to another
#+end_quote

Before describing the Org-babel environment in detail we will quickly
review the existing tools each of which addresses a portion of the
problem of *computational communication*.

*** Existing Tools
Each of the tools listed below addresses an subset of the problem of
computational communication.
**** Web
Literate Programming [fn:5] is the practice of writing computer
programs in such a way that the main objective is to explain to a
human reader what the program is intended to do.  Literate programming
consists of embedding code inside of a prose document written in the
TeX document authoring syntax.  Programs written in this manner can be
- tangled :: resulting in a code file suitable for use by a computer
- woven :: resulting in a text document suitable for use by a person

The Web family of tool enable Literate Programming.  The initial =WEB=
tool only worked with the Pascal programming language.  Newer versions
such as =Noweb= can handle arbitrary programming languages.  Web tools
enable the *authoring* of both prose and code, but provide no
facilities for the execution of code from within documents.

**** Comment Extraction
Comment extraction tools are a lighter weight alternative to literate
programming.  Comment extraction tools can be used to extract
documentation from comments embedded in pure code documents.  Most
major modern programming languages are supported by a comment
extraction tool.

Although comment-extraction is much less flexible than literate
programming it is much more widely used.  This is largely due to the
fact that it requires no changes to the programmers editing
environment and can be used directly from inside of source code files.

**** Sweave
Like Web documents Sweave documents consist of code embedded into TeX
documents [fn:6].  Sweave only supports the R statistical programming
language.  The code in Sweave documents is executed during publishing
the output of which can be used as figures or data in the report.  As
such Sweave enables "dynamic reports" which can be updated
automatically if the data or analysis change.

**** Field
Field [fn:7] is a text editor based on research started at the MIT
media lab [fn:8].  Field allows code from multiple programming
languages to be intermingled in the same document.  These code
snippets can then share data between themselves.

Currently Field does not support exporting to human-readable
documents, and Field only supports languages which run on the JVM.

**** Notebooks
Notebooks are interactive systems for a user to interact with a
programming or statistical analysis engine.  Notebooks support the
co-mingling of code and results in a single document and some
notebooks provide for exportation of the document to various formats.

Notebooks are characterized by a single linear session consisting of a
series of commands being submitted to the engine and the engine
returning results.  While notebooks may provide features aimed at
integrating their results into published works they are not document
authoring environments.

Examples of notebook software include
- Matlab [fn:9]
- Sage Math [fn:10]
** Org-babel -- solution
Org-babel extends Emacs Org-mode with the ability to execute and
selectively export source code blocks embedded in Org-mode documents.
The results of code execution -- text, tables and graphics -- can be
used as input to other source code blocks or integrated into the
powerful publishing facilities of Org-mode.

Org-babel provides a single environment supporting
- prose document authoring -- with export to HTML, LaTeX, plain text,
  and LaTeX beamer
- the authoring of source-code in a familiar editing environment --
  the Emacs major mode related to the language
- the interactive and automatic execution of source code with control
  over the flow of data into and out of the source code block
- the storage and analysis of raw data in both spreadsheet and
  notebook fashion
- sophisticated organizational and task management facilities

The core of Org-babel is language agnostic and can easily be extended
to provide support for new programming languages.  Org-babel currently
supports 19 programming languages [fn:11].

The majority of the features above are provided directly by the
Org-mode project which Org-babel extends.  As such the following
description of Org-babel will begin by describing Org-mode.

*** Org-mode
Thank you Carsten!

- export targets (html, latex, beamer, ascii)
- edit source-code
- project/task management
- spreadsheets
- more?

*** Org-babel -- executable source-code in Org-mode
*** Satisfying known computational communication needs
**** org-babel as compendium -- RR
**** org-babel as web -- LP
**** org-babel as active document -- Notebook
**** other prototypes for sharing code/data?
*** Example Usage
**** Knuth's prime
**** Working Notes
**** Research Project
** Conclusion -- present and future
*** Initial reaction
*** Future Work
**** bring outside of Emacs
*** Discussion
** Reference
*** Bib
**** Web
     - [[file:reference/knuthweb.pdf][Knuth]]
     - See pg. 14 for an interesting discussion of WEB's development
**** Sweave
[[file:reference/sweave.pdf][sweave.pdf]]
#+begin_src bibtex
  @inproceedings{lmucs-papers:Leisch:2002,
    author = {Friedrich Leisch},
    title = {Sweave: Dynamic Generation of Statistical Reports Using
                    Literate Data Analysis},
    booktitle = {Compstat 2002 --- Proceedings in Computational
                    Statistics},
    pages = {575--580},
    year = 2002,
    editor = {Wolfgang H{\"a}rdle and Bernd R{\"o}nz},
    publisher = {Physica Verlag, Heidelberg},
    note = {ISBN 3-7908-1517-9},
    url = {http://www.stat.uni-muenchen.de/~leisch/Sweave}
  }  
#+end_src

**** Literate statistical analysis (Rossini)
[[file:reference/literate-stat-analysis.pdf][literate-stat-analysis.pdf]]
#+begin_src bibtex
  @TechReport{ross:lunt:2001,
    author =       {Rossini, A.J. and Lunt, Mark},
    title =        {Literate Statistical Analysis},
    institution =  {University of Washington, Biostatistics},
    year =         2001
  }  
#+end_src

**** Emacs Speaks Statistics (Rossini)
    :PROPERTIES:
    :CUSTOM_ID: ess-paper
    :END:
    [[file:reference/ess.pdf][ess.pdf]]
    Anthony Rossini, Martin Maechler, Kurt Hornik, Richard
    M. Heiberger, and Rodney Sparapani, "Emacs Speaks Statistics: A
    Universal Interface for Statistical Analysis" (July 17,
    2001). UW Biostatistics Working Paper Series. Working Paper 173.
    http://www.bepress.com/uwbiostat/paper173

Reading this paper makes me think we could almost get away with a
straightforward description of org-babel.
**** Emacs Speaks Statistics: A Multiplatform, Multipackage etc. (Rossini)
      [[file:reference/jcgs-unblinded.pdf][jcgs-unblinded.pdf]]
      ESS is described in a peer-reviewed journal article:
      Emacs Speaks Statistics: A Multiplatform, Multipackage Development Environment for Statistical Analysis  [Abstract]
      Journal of Computational & Graphical Statistics 13(1), 247-261
      Rossini, A.J, Heiberger, R.M., Sparapani, R.A., Maechler, M., Hornik, K. (2004) 

#+begin_quote 
   We discuss how ESS enhances a statistician's daily activities by
presenting its features and showing how it facilitates statistical
computing. Next, we describe the Emacs text editor, the underlying
platform on which ESS is built. We conclude with a short history of
the development of ESS and goals for the future.
#+end_quote

**** Gentleman & Temple Lang (2004)
      :PROPERTIES:
      :CUSTOM_ID: gentleman-lang
      :END:
      [[file:reference/stat-analy-and-repro-research.pdf][stat-analy-and-repro-research.pdf]]
      Robert Gentleman and Duncan Temple Lang, "Statistical Analyses
      and Reproducible Research" (May 2004). Bioconductor Project
      Working Papers. Working Paper 2.
      http://www.bepress.com/bioconductor/paper2 

This paper introduces the idea of a "compendium" which is a collection
of data, code, and expository text which can be used to create
"dynamic documents".  This paper lays out the framework of what
compendiums should look like, and what abilities would be required of
software helping to implement a compendium.  Much of these sections
read like advertisements for Org-babel.

There are *many* nice multiline quotes in this paper that could serve
as good motivation for org-babel.

***** babel as compendium
from "General Software Architecture for Compendiums" a compendium must
have
1) Authoring Software :: org-mode
2) Auxillary Software :: org-mode attachments should satisfy this
3) Transformation Software :: org-babel, with tangle, and the org-mode
   export functions
4) Quality control Software :: the unit tests in various languages can
   fit this bill -- else where in the paper they mention unit tests
   would be appropriate
5) Distribution Software :: tools for managing the history of a
   compendium and distributing the compendium.  they seem to not know
   about distributed version control systems -- because they are the
   ideal solution to this issue and they aren't mentioned.  as in the
   ESS paper we could talk about Emacs's integration with version
   control systems

**** Gentleman (2005)
      Gentleman, Robert (2005) "Reproducible Research: A
      Bioinformatics Case Study," Statistical Applications in Genetics
      and Molecular Biology: Vol. 4 : Iss. 1, Article 2.  DOI:
      10.2202/1544-6115.1034 Available at:
      http://www.bepress.com/sagmb/vol4/iss1/art2

At a quick glance this paper attempts to reconstruct an old paper by
distributing a collection of data files, R code and latex/Sweave files
from which the text and diagrams are generated. The files are
available for download from the above link.

**** Keeping Statistics Alive in Documents 

requirements for software enable reproducible research
#+begin_quote 
- Documents have well defined contents which are maintained in a
  reliable way. Persistence must be supported. Document contents as
  well as dynamic linking must be preserved if documents are stored or
  communicated.
- Documents are structured internally and each part has a
  context. Structure and context relations must be
  supported. Components should be sensitive to their context and adapt
  to the structure and context of the embedding document, allowing
  pre-defined components to be used in an efficient and flexible way.
- Documents may be communicated. Sharing of documents and data must be
  supported.  This means taking account of problems possibly which may
  arise from duplication of information, partial or delayed access, or
  different user environments.
#+end_quote

They talk about "linking between components" where components sound
like
- raw data
- blocks of processing functionality (source-code blocks) 
- results of processing
The positive effects of being able to swap out components are
discussed.

Their "documents" are build by linking components.  So documents are
sort of like the compendium views of the [[gentleman-lang]] paper -- they
are the dynamic output of processing/composing the actual persistent
content.


* COMMENT Scrap / Figures

#+begin_src ditaa :file data/existing-tools.png :cmdline -r
             ^
       Human |    
         Use |                                             Reproducible Research    
             |     Literate Programming                                         
             |                                                        
             |                                                        
             |                                                        
             |                                                        
             |                                                        
             |                                                        
             |                                                        
             |                                                        
             |                                                        
             |                                                 Notebook
    Personal |                                                         
         Use |                                                         
             |                                                         
             |                                                         
             |                                                         
             |                                                         
             |                                                         
             |                                                         
             |                                                         
             |                                                                   
             |     Comment Extraction                             Meta Programming
             |                                                                   
             |                                                                   
             |                                                                   
    Computer |                                                                   
         Use |                                                                   
             v                                                                   
                  <--------------------------------------------------------------->
                    Writing                                               Running  
#+end_src

#+begin_src ditaa :file data/existing-tools.png :cmdline -r
  +---------------------------------------------------------------------------------+
  |                          Computational Communication                            |                           
  |                                                                                 |
  |   +-------------------------+                                                   |
  |   |   literate programming  |                       +------------------------+  |
  |   |   --------------------  |                       |      Noteboook         |  |
  |   |   - Web                 |                       |      ---------         |  |
  |   |                         |                       |      - Stuff           |  |
  |   |                         |                       |                        |  |
  |   |                     +---+-----------------------+-------+                |  |
  |   |                     |     reproducible research         |                |  |
  |   |                     |     ---------------------         |                |  |
  | +-+-------------------+ |       - Sweave                    +----------------+  |
  | | Comment Extraction  | |                                   |                   |
  | | ------------------  | |                                   |                   |
  | | - Perl POD          +-+                                   |                   |
  | | - Ruby RDoc         | |                                   |                   |
  | | - etc...            | |                                   |                   |
  | |                     | |                +------------------+-----------+       |
  | |                     | |                |      Meta Programming        |       |
  | |                     | |                |      ----------------        |       |
  | |                     | +----------------+      - Field                 |       |
  | |                     |                  |                              |       |
  | +-------------------+-+                  |                              |       |
  |                                          |                              |       |
  |                                          +------------------------------+       |
  |                                                                                 |
  +---------------------------------------------------------------------------------+
#+end_src

* Footnotes

[fn:1] I'm sure there's a reference to back this up

[fn:2] again -- I know this to be true but should find a reference

[fn:3] knuth

[fn:4] gentleman-lang

[fn:5] knuth

[fn:6] Sweave

[fn:7] http://openendedgroup.com/field/

[fn:8] http://www.media.mit.edu/

[fn:9] http://www.mathworks.com/

[fn:10] http://www.sagemath.org/

[fn:11] http://orgmode.org/worg/org-contrib/babel/reference.php#languages
